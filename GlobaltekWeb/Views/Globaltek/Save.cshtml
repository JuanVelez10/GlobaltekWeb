@model Domain.Dtos.BillInfo

@{
    ViewData["Title"] = "Create";
}

<div class="row">

    <div class="col-md-4"> </div>


    <div class="col-md-4">

        <img src="/image/Logo.png" class="Logo">

        <div id="SaveDate">
            <h4 class="whiteText">@ViewBag.save Invoce</h4>
            <hr />

            <div class="control-label @ViewBag.hide">
                <h6 class="col-md-12"> <B>Id:</B> @Model.Id </h6>
                <h6 class="col-md-12"> <B>Number:</B> @Model.Number</h6>
                <h6 class="col-md-12"> <B>SubTotal:</B> @Model.SubTotal</h6>
                <h6 class="col-md-12"> <B>Discount:</B> @Model.DiscountTotal</h6>
                <h6 class="col-md-12"> <B>Tax:</B> @Model.TaxTotal</h6>
                <h6 class="col-md-12"> <B>Total:</B> @Model.Total</h6>
            </div>

            <div class="form-group">
                <label class="control-label">Date</label>
                <input id="Date" type="date" class="form-control textData" min="@DateTime.Now.ToString("yyyyy-MM-dd")" value="@DateTime.Now.ToString("yyyyy-MM-dd")" />
            </div>

            <div class="form-group">
                <label class="control-label">Payment</label>
                @Html.DropDownList("PaymentType", (IEnumerable<SelectListItem>)ViewBag.listPaymentType, htmlAttributes: new { @class = "form-control textData" })
            </div>

            <div class="form-group">
                <label class="control-label">Person</label>
                @Html.DropDownList("PersonId", (IEnumerable<SelectListItem>)ViewBag.listPerson, htmlAttributes: new { @class = "form-control textData" })
            </div>

            <div class="form-group">
                <label class="control-label">Tax</label>
                @Html.DropDownList("TaxId", (IEnumerable<SelectListItem>)ViewBag.listTaxes, htmlAttributes: new { @class = "form-control textData" })
            </div>
            <div class="form-group">
                <label class="control-label">DiscountId</label>
                @Html.DropDownList("DiscountId", (IEnumerable<SelectListItem>)ViewBag.listDiscounts, htmlAttributes: new { @class = "form-control textData" })
            </div>

            <br />
            <h4 class="whiteText">Add Product</h4>
            <hr />

            <div id="message"></div>

            <div class="form-group">
                <label class="control-label">Product</label>
                @Html.DropDownList("NameProduct", (IEnumerable<SelectListItem>)ViewBag.listproducts, htmlAttributes: new { @class = "form-control textData" })
            </div>

            <div class="form-group">
                <label class="control-label">Amount</label>
                @Html.DropDownList("Amount", (IEnumerable<SelectListItem>)ViewBag.listAmounts, htmlAttributes: new { @class = "form-control textData" })
            </div>
            <br />

            <div align="center">
                <button id="add" class="btn btn-primary">Add Product</button>
            </div>

            <br />

            <div id="AddProducts">

                @if (Model.BillDetails != null)
                {
                    @foreach (var item in Model.BillDetails)
                    {
                        <button onclick="Delete(this)" class="btn btn-success ListProduct" id="@item.ProductId">
                            @item.NameProduct @item.Amount <i class="fa fa-times ListAmount" id="@item.Amount"> </i>
                        </button>
                    }
                }

            </div>

            <br />

            <div align="center">
                <button id="save" class="btn btn-primary">@ViewBag.save</button>
            </div>
        </div>

        <br />

       <div id="messageSuccess"></div>

        <div align="center">
            <form asp-action="Home">
                <input type="submit" value="Back" class="btn btn-success" />
            </form>
        </div>

    </div>

    <div class="col-md-4"> </div>

</div>



@section Scripts {
    @{
    await Html.RenderPartialAsync("_ValidationScriptsPartial");
}
}

<script>
    $(document).ready(function () {

        $('#add').button().click(function () {
            $('#message div').remove();
            $('#message').show();
            var exitsProducts = document.getElementById($('#NameProduct').val());
            if (exitsProducts == null) {
                $('#AddProducts').append('<button onclick="Delete(this)" class="btn btn-success ListProduct" id="' + $('#NameProduct').val() + '">'
                + $('#NameProduct option:selected').text() +' '+ $('#Amount option:selected').text() +' '
                + '<i class="fa fa-times ListAmount" id="' + $('#Amount').val() + '"></i>'
                + '</button>');
            } else {
                $('#message').append('<div class="alert alert-danger" align="center">The product already exists </div >');
                $('#message').delay(4000).fadeOut("slow");
            }

            document.getElementById('NameProduct').options.selectedIndex = 0;
            document.getElementById('Amount').options.selectedIndex = 0;
        });

        $('#save').button().click(function () {
            $('#message div').remove();
            $('#message').show();

            var exitsProducts = document.getElementsByClassName('ListProduct');

            if (exitsProducts.length > 0) {

            $.ajax({
                type: "POST",
                url: '/Globaltek/SaveInfo',
                data: JSON.stringify(CreateBillInfo()),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function(data) {
                    if(data){
                        $('#SaveDate').hide();
                        $('#messageSuccess').append('<div class="alert alert-success" align="center">Information saved successfully</div >');
                    }
                    else{
                        $('#SaveDate').hide();
                        $('#messageSuccess').append('<div class="alert alert-danger" align="center">Information was not saved</div >');
                    }

                },
                error: function () {
                    $('#message').append('<div class="alert alert-danger" align="center">Error saved invoce</div >');
                    $('#message').delay(4000).fadeOut("slow");
                }

            });

            } else {
                $('#message').append('<div class="alert alert-danger" align="center">There must be at least one product </div >');
                $('#message').delay(4000).fadeOut("slow");
            }
        });

    });


    function CreateBillInfo() {
        var billInfo = {};
        billInfo.Id = '@Model.Id';
        billInfo.Number = @Model.Number;
        billInfo.SubTotal = @Model.SubTotal;
        billInfo.DiscountTotal = @Model.DiscountTotal;
        billInfo.TaxTotal = @Model.TaxTotal;
        billInfo.Total = @Model.Total;
        billInfo.Update= @Model.Update.ToString().ToLower() ;

        billInfo.Date = document.getElementById("Date").value.replace(/^(0+)/g, '');
        billInfo.PaymentType = document.getElementById("PaymentType").value;
        billInfo.PersonId =  document.getElementById("PersonId").value;
        billInfo.TaxId =  document.getElementById("TaxId").value;
        billInfo.DiscountId =  document.getElementById("DiscountId").value;


        var BillDetails = [];

        var products = document.getElementsByClassName('ListProduct');
        var amounts = document.getElementsByClassName('ListAmount');

        if(products.length > 0){

            for (var i = 0; i < products.length; i++) {
                var BillDetailInfo = {};
                BillDetailInfo.ProductId = products[i].getAttribute("id");
                BillDetailInfo.Amount = amounts[i].getAttribute("id");
                BillDetails.push(BillDetailInfo);
            }
        }

        billInfo.BillDetails = BillDetails;

        return billInfo;
    }

    function Delete(elem) {
      elem.remove();
    }

</script>